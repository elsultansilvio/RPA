<Activity mc:Ignorable="sap sap2010" x:Class="GetSearchEngineDetails" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="SearchEngine" Type="InArgument(x:String)" />
    <x:Property Name="JobDetailsUrl" Type="InArgument(x:String)" />
    <x:Property Name="FunctionName" Type="OutArgument(x:String)" />
    <x:Property Name="Company" Type="OutArgument(x:String)" />
    <x:Property Name="CreatedSince" Type="OutArgument(x:String)" />
    <x:Property Name="LocationDetails" Type="OutArgument(x:String)" />
    <x:Property Name="TimeoutCounter" Type="InArgument(x:Int32)" />
    <x:Property Name="OriginalJobName" Type="InArgument(x:String)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>1174,2696</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetSearchEngineDetails" sap:VirtualizedContainerService.HintSize="526,2591" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[SearchEngine.ToLower.Contains(&quot;vdab&quot;)]" DisplayName="If VDAB" sap:VirtualizedContainerService.HintSize="484,51" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ParseDetailsJobVDAB workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="ScrapeJobDetails\ParseDetailsJobVDAB.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="JobUrl">[JobDetailsUrl]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Company">[Company]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="LocationDetails">[LocationDetails]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="CreatedSince">[CreatedSince]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="JobName">[FunctionName]</OutArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="TimeoutCounter">[TimeoutCounter]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <If Condition="[SearchEngine.ToLower.Contains(&quot;vacature&quot;)]" DisplayName="If Vacature" sap:VirtualizedContainerService.HintSize="484,235" sap2010:WorkflowViewState.IdRef="If_10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ParseDetailsJobVacature workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="ScrapeJobDetails\ParseDetailsJobVacature.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="JobUrl">[JobDetailsUrl]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Company">[Company]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="LocationDetails">[LocationDetails]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="CreatedSince">[CreatedSince]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="JobName">[FunctionName]</OutArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="TimeoutCounter">[TimeoutCounter]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <If Condition="[SearchEngine.ToLower.Contains(&quot;forem&quot;)]" DisplayName="If LeForem" sap:VirtualizedContainerService.HintSize="484,235" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ParseDetailsJobLeForem workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="ScrapeJobDetails\ParseDetailsJobLeForem.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="JobUrl">
              <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="JobDetailsUrl" />
            </InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Company">
              <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="Company" />
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="LocationDetails">
              <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="LocationDetails" />
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="CreatedSince">
              <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="CreatedSince" />
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="JobName">
              <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="FunctionName" />
            </OutArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="TimeoutCounter">
              <mva:VisualBasicValue x:TypeArguments="x:Int32" ExpressionText="TimeoutCounter" />
            </InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <If Condition="[SearchEngine.ToLower.Contains(&quot;actiris&quot;)]" DisplayName="If Actiris" sap:VirtualizedContainerService.HintSize="484,235" sap2010:WorkflowViewState.IdRef="If_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ParseDetailsJobActiris workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="ScrapeJobDetails\ParseDetailsJobActiris.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="JobUrl">[JobDetailsUrl]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Company">[Company]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="CreatedSince">[CreatedSince]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="LocationDetails">[LocationDetails]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="JobName">[FunctionName]</OutArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="TimeoutCounter">[TimeoutCounter]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <If Condition="[SearchEngine.ToLower.Contains(&quot;monster&quot;)]" DisplayName="If Monster" sap:VirtualizedContainerService.HintSize="484,235" sap2010:WorkflowViewState.IdRef="If_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ParseDetailsJobMonster workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="ScrapeJobDetails\ParseDetailsJobMonster.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="JobUrl">[JobDetailsUrl]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Company">[Company]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="CreatedSince">[CreatedSince]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="LocationDetails">[LocationDetails]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="JobName">[FunctionName]</OutArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="TimeoutCounter">[TimeoutCounter]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <If Condition="[SearchEngine.ToLower.Contains(&quot;stepstone&quot;)]" DisplayName="If Stepstone" sap:VirtualizedContainerService.HintSize="484,235" sap2010:WorkflowViewState.IdRef="If_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ParseDetailsJobStepstone workflow" sap:VirtualizedContainerService.HintSize="338,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="ScrapeJobDetails\ParseDetailsJobStepstone.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="JobUrl">[JobDetailsUrl]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Company">[Company]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="CreatedSince">[CreatedSince]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="LocationDetails">[LocationDetails]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="JobName">[FunctionName]</OutArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="TimeoutCounter">[TimeoutCounter]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <If Condition="[SearchEngine.ToLower.Contains(&quot;jobat&quot;)]" DisplayName="If jobat" sap:VirtualizedContainerService.HintSize="484,235" sap2010:WorkflowViewState.IdRef="If_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ParseDetailsJobJobat workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="ScrapeJobDetails\ParseDetailsJobJobat.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="JobUrl">[JobDetailsUrl]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Company">[Company]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="CreatedSince">[CreatedSince]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="LocationDetails">[LocationDetails]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="JobName">[FunctionName]</OutArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="TImeoutCounter">[TimeoutCounter]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <If Condition="[SearchEngine.ToLower.Contains(&quot;linkedin&quot;)]" DisplayName="If LinkedIn" sap:VirtualizedContainerService.HintSize="484,235" sap2010:WorkflowViewState.IdRef="If_7">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ParseDetailsJobLinkedIn workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="ScrapeJobDetails\ParseDetailsJobLinkedIn.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="JobUrl">[JobDetailsUrl]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Company">[Company]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="CreatedSince">[CreatedSince]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="LocationDetails">[LocationDetails]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="JobName">[FunctionName]</OutArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="TimeoutCounter">[TimeoutCounter]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <If Condition="[SearchEngine.ToLower.Contains(&quot;indeed&quot;)]" DisplayName="If Indeed" sap:VirtualizedContainerService.HintSize="484,235" sap2010:WorkflowViewState.IdRef="If_8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ParseDetailsJobIndeed workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="ScrapeJobDetails\ParseDetailsJobIndeed.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="JobUrl">[JobDetailsUrl]</InArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Company">[Company]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="CreatedSince">[CreatedSince]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="LocationDetails">[LocationDetails]</OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="JobName">[FunctionName]</OutArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="TimeoutCounter">[TimeoutCounter]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
    </If>
    <If Condition="[FunctionName is Nothing OrElse FunctionName = &quot;&quot;]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_9">
      <If.Then>
        <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[FunctionName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[OriginalJobName]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
    </If>
  </Sequence>
</Activity>